# Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

# Пример:
# - 6 -> да
# - 7 -> да
# - 1 -> нет
'''
day_of_week = int(input('Введите день недели: '))

if day_of_week > 0 and day_of_week < 8:
    if day_of_week // 6 or day_of_week // 7:
        print('Это выходной день.')
    else:
        print('Это будний день.')
else:
    print('Введены некорректные данные.')
'''
# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.


# Напишите программу, которая принимает на вход координаты точки (X и Y), 
# причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).

# Пример:
# - x=34; y=-30 -> 4
# - x=2; y=4-> 1
# - x=-34; y=-30 -> 3
'''
def Quarter(x, y):
    if x > 0 and y > 0:
        print('Ваша точка находится в первой четверти.')
    elif x < 0 and y > 0:
        print('Ваша точка находится во второй четверти.')
    elif x < 0 and y < 0:
        print('Ваша точка находится в третьей четверти.')
    elif x > 0 and y < 0:
        print('Ваша точка находится в четвертой четверти.')
    else:
        print('Координаты не соответствуют условию задачи.')

coordinate_x = int(input('Введите координату x: '))
coordinate_y = int(input('Введите координату y: '))

Quarter(coordinate_x, coordinate_y)
'''
# Напишите программу, которая по заданному номеру четверти, 
# показывает диапазон возможных координат точек в этой четверти (x и y).
'''
def Coordinate_range(num):
    if num == 1:
        print('x > 0, y > 0')
    elif num == 2:
        print('x < 0, y > 0')
    elif num == 3:
        print('x < 0, y < 0')
    elif num == 4:
        print('x > 0, y < 0')

quarter_number = int(input('Введите номер четверти: '))

if quarter_number >= 1 and quarter_number <=4:
    Coordinate_range(quarter_number)
else:
    print('Введенное число не соответствует ни одной четверти.')
'''
# Напишите программу, которая принимает на вход координаты двух точек и 
# находит расстояние между ними в 2D пространстве.

# Пример:
# - A (3,6); B (2,1) -> 5,09
# - A (7,-5); B (1,-1) -> 7,21